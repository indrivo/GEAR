@using Microsoft.AspNetCore.Http
@using GR.Identity.Abstractions
@using GR.Identity.Abstractions.Models.MultiTenants
@using GR.Localization.Abstractions.ViewModels.LocalizationViewModels
@using GR.MultiTenant.Abstractions

@inject UserManager<GearUser> UserManager
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig
@inject IHttpContextAccessor Accessor
@inject IOrganizationService<Tenant> TenantService

@model Guid

@{
	var id = Accessor.HttpContext.Session.GetString(LocalizationConfig.Value.SessionStoreKeyName);
	var language = LocalizationConfig.Value.Languages.FirstOrDefault(l => l.Identifier == id);
}

@if (User.Identity.IsAuthenticated)
{
	var user = await UserManager.GetUserAsync(User);
	var organization = TenantService.GetTenantById(user?.TenantId.GetValueOrDefault(Guid.Empty) ?? Guid.Empty);

	<script>
		var st = new ST();

		const storageSettings = localStorage.getItem("settings");
		if (storageSettings) {
			var s = JSON.parse(storageSettings);
			s.user = {
				userName: "@user?.UserName",
				email: "@user?.Email",
				id: "@user?.Id",
				organization: "@organization.Name"
			};
			s.layout = {
				id: "@Model"
			};
			s.localization.current = {
				identifier: "@language?.Identifier",
				name: "@language?.Name"
			};

			localStorage.setItem("settings", JSON.stringify(s));
		} else {
			const s = {
				layout: {
					id : "@Model"
				}
			};

			s.user = {
				userName: "@user?.UserName",
				email: "@user?.Email",
				id: "@user?.Id",
				organization: "@organization.Name"
			};

			s.localization = {
				languages: window.load("/Localization/GetLanguagesAsJson"),
				current: {
					identifier: "@language?.Identifier",
					name: "@language?.Name"
				}
			};
			localStorage.setItem("settings", JSON.stringify(s));
		}
	</script>
}
else
{
	<script>
		localStorage.removeItem("current_user");
		const s = {
				layout: {
					id : "@Model"
				}
		};

		s.localization = {
				languages: window.load("/Localization/GetLanguagesAsJson"),
				current: {
					identifier: "@language?.Identifier",
					name: "@language?.Name"
				}
			};

		localStorage.setItem("settings", JSON.stringify(s));

	</script>
}