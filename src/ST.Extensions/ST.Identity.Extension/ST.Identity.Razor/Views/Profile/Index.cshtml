@inject IStringLocalizer Localizer
@{
	ViewData["Title"] = "Profiles list";
}
	<div class="card">
		<div class="card-body">
			<h4 class="card-title">Profiles</h4>
			<h6 class="card-subtitle">List of profiles</h6>
			<div class="table-responsive">
				<div class="mt-2">
					<div class="d-flex">
						<div class="mr-auto">
							<div class="form-group">
								<a asp-action="Create" class="btn btn-primary btn-sm">
									<i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>@Localizer["add_profile"]
								</a>
								<small>New profile will be added.</small>
							</div>
						</div>
					</div>
				</div>
				<table class="table table-striped table-bordered" id="profileTable">
					<thead>
						<tr>
							<th>ProfileName</th>
							<th>IsSystem</th>
							<th>EntityId</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
			</div>
		</div>
	</div>

@section Scripts{
	<script type="text/javascript" language="javascript">
		$(".prof_page").dropdown();
		function getTokenAntiForgery() {
			const token = '@Html.AntiForgeryToken()';
			return $(token).val();
		}
	</script>
	<script language="javascript" type="text/javascript">
		$(document).ready(function($) {
			const tableId = '#profileTable';
			if ($.fn.DataTable.isDataTable(tableId)) {
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}

			const complete = $(tableId).DataTable({
				"language": {
					"url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
				},
				dom: '<"CustomizeColumns">lBfrtip',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("OrderList")',
					"type": "POST"
					//"datatype": "json"
				},
				"columns": [
					{ "data": "profileName" },
					{"data": "isDeleted",
						"render": function(data) {
							return `<div class="checkbox checkbox-success form-group">
									<input ${data ? 'checked':''} id="isSystem" type="checkbox" class="check"  disabled/>
									<label asp-for="isSystem"></label>
								</div>`;
						} },
					{ "data": "entityId" },
					{
						"render": function(data, type, row, meta) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit")?id=${row.id}">Edit</a>
									<button type="button" class='btn btn-danger btn-sm' onclick=CreateAlert('${row.id}'); >Delete</button>
									</div>`;
						}
					}
				]
			});
		});
		function CreateAlert(rowId) {
			const object = {
				alertTitle: "Delete this profile?",
				alertText: "are you sure that you want to leave this profile?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#profileTable",
				urlForDelete: '@Url.Action("Delete")',
				type:"warning",
				onDeleteSuccess: "Profile has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse:"Api not respond or not have permissions."
			};
			DeleteData(object);
		}
	</script>
}
