@model ST.Localization.Abstractions.ViewModels.LocalizationViewModels.AddKeyViewModel
@inject IStringLocalizer Localizer
@{
    ViewData["Title"] = Localizer["system_localization_add_key"];
}

<div class="card card-outline-primary">
    <div class="card-header">
        <h4 class="mb-0 text-white">@Localizer["add_key"]</h4>
    </div>
    <div class="card-body">
        <form asp-action="AddKey" role="form">
            <div class="form-body">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="row pt-2">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label asp-for="NewKey" class="control-label"></label>
                            <input asp-for="NewKey" class="form-control" />
                            <span asp-validation-for="NewKey" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row pt-2">
                    <div class="col-md-12">
                        <div class="form-group">
                            @foreach (var item in Model.LocalizedStrings)
                            {
                                <div style="display: none" class="spinner-border text-success spinner_@item.Key" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                                <label class="control-label">
                                    @Model.Languages[item.Key]
                                </label>
                                <div class="input-group mb-3">
                                    <textarea class="form-control _translate_@item.Key" asp-for="LocalizedStrings[item.Key]"></textarea>
                                    <div class="input-group-append">
                                        <a href="#" data-direction-start="@item.Key" class="btn btn-success input-group-text translateStartEvent" href="#"><span class="fa fa-translate"></span> Translate from @item.Key to all</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-success"> <i class="fa fa-check"></i> @Localizer["save"]</button>
                <button type="reset" class="btn btn-inverse"> @Localizer["reset"]</button>
                <a asp-action="Index" class="btn btn-link"> @Localizer["back"]</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            $(".translateStartEvent").on("click",
                function() {
                    const text = $(this).parent().parent().find("textarea").val();
                    const direction = $(this).data("direction-start");
                    
                    if (text) {
                        $(`.spinner_${direction}`).css("display", "block");
                        $.ajax({
                            url: "@Url.Action("Translate")",
                            data: {
                                text: text,
                                from: direction
                            },
                            success: function(data) {
                                if (data && data.is_success) {
                                    for (let key in data.result) {
                                        $(`._translate_${key}`).val(data.result[key]);
                                    }
                                } else {
                                    Swal.fire(
                                        'Error',
                                        'Internal Server error!',
                                        'error'
                                    );
                                }
                            },
                            error: function(error) {
                                Swal.fire(
                                    'Error',
                                    error,
                                    'error'
                                );
                            }
                        }).then(() => {
                            $(`.spinner_${direction}`).css("display", "none");
                        });
                    } else {
                        Swal.fire(
                            'Error',
                            'No value provided, to translate',
                            'error'
                        );
                    }
                });
        });
    </script>
}