@inject IStringLocalizer Localizer

@{
    ViewData["Title"] = Localizer["groups_index_title"];
}
<input type="hidden" id="hiddenID" />
<div class="card">
    <div class="card-body">
        <h4 class="card-title">@Localizer["groups"]</h4>
        <h6 class="card-subtitle">@Localizer["groups_index_title"]</h6>
        <div class="table-responsive">
            <div class="mt-2">
                <div class="d-flex">
                    <div class="mr-auto">
                        <div class="form-group">
                            <a asp-action="Create" class="btn btn-primary btn-sm">
                                <i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>@Localizer["add_group"]
                            </a>
                            <small>@Localizer["group_add_info"]</small>
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-bordered" id="groupTable">
                <thead>
                    <tr>
                        <th>@Localizer["name"]</th>
                        <th>@Localizer["created"]</th>
                        <th>@Localizer["author"]</th>
                        <th>@Localizer["modified_by"]</th>
                        <th>@Localizer["changed"]</th>
                        <th>@Localizer["is_deleted"]</th>
                        <th>@Localizer["list_actions"]</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts{
    <script>
		function getTokenAntiForgery() {
			const token = '@Html.AntiForgeryToken()';
			return $(token).val();
		}
    </script>
    <script language="javascript" type="text/javascript">
		$(document).ready(function($) {
			const tableId = '#groupTable';
			if ($.fn.DataTable.isDataTable(tableId)) {
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}

			$(tableId).DataTable({
				"language": {
					"url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
				},
				dom: '<"CustomizeColumns">lBfrtip',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("GetGroupList", "GroupsApi")',
					"type": "POST"
				},
				"columns": [
					{ "data": "name" },
					{ "data": "created" },
					{ "data": "author" },
					{ "data": "modifiedBy" },
					{ "data": "changed" },
					{
						"data": "isDeleted",
						"render": function(data) {
							return `<div class="checkbox checkbox-success form-group">
									<input ${data ? 'checked' : ''
								} id="isSystem" type="checkbox" class="check" disabled />
									<label asp-for="isSystem"></label>
								</div>`;
						}
					},
					{
						"render": function(data, type, row, meta) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit")?id=${row.id}">${window.translate("edit")}</a>
									<button type="button" class='btn btn-danger btn-sm' onclick=CreateAlert('${row.id
								}'); >${window.translate("delete")}</button>
									</div>`;
						}
					}
				]
			});
		});

		function CreateAlert(rowId) {
			const object = {
				alertTitle: "Delete this group?",
				alertText: "are you sure that you want to leave this group?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#groupTable",
				urlForDelete: '@Url.Action("RemoveGroupPermanently", "GroupsApi")',
				type: "warning",
				onDeleteSuccess: "Group has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse: "Api not respond or not have permissions."
			};
			invokeDeleteRowModal(object);
		}
    </script>
}