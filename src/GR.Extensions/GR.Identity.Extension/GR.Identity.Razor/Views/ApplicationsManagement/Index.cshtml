@inject IStringLocalizer Localizer
@{
	ViewData["Title"] = "Application list";
}

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Applications</h4>
        <h6 class="card-subtitle">List of applications</h6>
        <div class="table-dataTable">
            <div class="mt-2">
                <div class="d-flex">
                    <div class="mr-auto">
                        <div class="form-group">
                            <a asp-action="Create" class="btn btn-primary btn-sm">
                                <i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>Add application
                            </a>
                            <small>New application will be added.</small>
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-bordered" width="100%" id="applicationTable">
                <thead>
                    <tr>
                        <th>Client Id</th>
                        <th>Client Name</th>
                        <th>Allow Offline Access</th>
                        <th>Allowed Grant Types</th>
                        <th>Client Uri</th>
                        <th>@Localizer["list_actions"]</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript" language="javascript">
		function getTokenAntiForgery() {
			const token = '@Html.AntiForgeryToken()';
			return $(token).val();
		}
    </script>
    <script language="javascript" type="text/javascript">
		$(document).ready(function($) {
			const tableId = '#applicationTable';
			if ($.fn.DataTable.isDataTable(tableId)) {
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}

			$(tableId).DataTable({
				"language": {
					"url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
				},
				dom: '<"table_render_applicationTable" <"CustomizeColumns">lBfr<"table-responsive"t>ip >',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("ApplicationList")',
					"type": "POST"
				},
				"columns": [
					{ data: "clientId" },
					{ data: "clientName" },
					{
						data: "allowOfflineAccess",
						render: function(data) {
							return `<div class="label label-table label-${data ? 'success' : 'danger'}">${data}</div>`;
						}
					},
					{
						data: "allowOfflineAccess",
						render: function(data) {
							return `<div class="label label-table label-${data ? 'success' : 'danger'}">${data}</div>`;
						}
					},
					{
						data: "clientUri",
						render: function(data) {
							return `<a href="${data}">${data}</a>`;
						}
					},
					{
						data: null,
						render: function(data, type, row) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit")?id=${row.id}">Edit</a>
									<button type="button" class='btn btn-danger btn-sm' onclick="CreateAlert('${row.id}');">Delete</button></div>`;
						}
					}
				],
                drawCallback: function () {
                    if ($('.table_render_applicationTable .dataTables_paginate .pagination li').length > 3) {
                        $('.table_render_applicationTable .dataTables_paginate').show();
                    } else {
                        $('.table_render_applicationTable .dataTables_paginate').hide();
                    }
                }
			});
		});

		function CreateAlert(rowId) {
			const object = {
				alertTitle: "Delete this application?",
				alertText: "are you sure that you want to leave this application?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#applicationTable",
				urlForDelete: '@Url.Action("DeleteApplication")',
				type: "warning",
				onDeleteSuccess: "Application has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse: "Api not respond or not have permissions."
			};
			DeleteData(object);
		}
    </script>
}
