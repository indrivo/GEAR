@inject IStringLocalizer Localizer
@{
	ViewData["Title"] = "Api resource list";
}
<div class="card">
    <div class="card-body">
        <h4 class="card-title">Tenants</h4>
        <h6 class="card-subtitle">List of api resources</h6>
        <div class="row">
            <div class="col-md-12">
                <blockquote>
                    This is the list of api resources that can be edited and assigned to new or existent applications
                </blockquote>
            </div>
        </div>
        <div class="table-dataTable">
            <div class="mt-2">
                <div class="d-flex">
                    <div class="mr-auto">
                        <div class="form-group">
                            <a asp-action="Create" class="btn btn-primary btn-sm">
                                <i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>Add api resource
                            </a>
                            <small>New api resource will be added.</small>
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-bordered" id="apiResourceTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>@Localizer["created"]</th>
                        <th>Enabled</th>
                        <th>@Localizer["list_actions"]</th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot></tfoot>
            </table>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript" language="javascript">
        function getTokenAntiForgery() {
            const token = '@Html.AntiForgeryToken()';
            return $(token).val();
        }
    </script>
    <script type="text/javascript" language="javascript">
        $(document).ready(function($) {
            const tableId = '#apiResourceTable';
            if ($.fn.DataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
                $(tableId).dataTable().empty();
            }
            $(tableId).DataTable({
                "language": {
                    "url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
                },
                dom: '<"CustomizeColumns">lBfr<"table-responsive"t>ip',
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "destroy": true,
                "ajax": {
                    "url": '@Url.Action("OrderList")',
                    "type": "POST"
                },
                "columns": [
                    { "data": "name" },
                    { "data": "description" },
                    { "data": "created" },
                    {
                        "data": "enabled",
                        "render": function(data, type, row, meta) {
                            return `${row.enabled ? "<i class='fa fa-check'></i>" : "<i class='fa fa-minus'></i>"}`;
                        }
                    },
                    {
                        data: null,
                        "render": function(data, type, row, meta) {
                            return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit")?id=${row.id}">Edit</a>
									`;
                        }
                    }
                ],
                "fnDrawCallback":function(){
                    if ($('.dataTables_paginate .pagination li').length > 3) {
                        $('.dataTables_paginate').show();
                    } else {
                        $('.dataTables_paginate').hide();
                    }
                }
            });
        });

        function createAlert(rowId) {
            const object = {
                alertTitle: "Delete this api resource?",
                alertText: "Are you sure that you want to leave this api resource?",
                confirmButtonText: "Yes, delete it!",
                rowId: rowId,
                tableId: "#apiResourceTable",
                urlForDelete: '@Url.Action("Delete")',
                type: "warning",
                onDeleteSuccess: "Api resource has been deleted.",
                onDeleteFail: "Something wrong",
                onServerNoResponse: "Api not respond or not have permissions."
            };
            DeleteData(object);
        }
    </script>
}