// <auto-generated />
using System;
using GR.WorkFlows.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GR.WorkFlows.Migrations
{
    [DbContext(typeof(WorkFlowsDbContext))]
    partial class WorkFlowsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("WorkFlows")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GR.Audit.Abstractions.Models.TrackAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("Changed");

                    b.Property<DateTime>("Created");

                    b.Property<string>("DatabaseContextName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<Guid>("RecordId");

                    b.Property<Guid?>("TenantId");

                    b.Property<int>("TrackEventType");

                    b.Property<string>("TypeFullName");

                    b.Property<string>("UserName");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.ToTable("TrackAudits");
                });

            modelBuilder.Entity("GR.Audit.Abstractions.Models.TrackAuditDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("Changed");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("PropertyName");

                    b.Property<string>("PropertyType");

                    b.Property<Guid?>("TenantId");

                    b.Property<Guid>("TrackAuditId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("TrackAuditId");

                    b.ToTable("TrackAuditDetails");
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalSettings");

                    b.Property<string>("Author");

                    b.Property<DateTime>("Changed");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEndState");

                    b.Property<bool>("IsStartState");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("TenantId");

                    b.Property<int>("Version");

                    b.Property<Guid>("WorkFlowId");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.Transition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("Changed");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("FromStateId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("TenantId");

                    b.Property<Guid>("ToStateId");

                    b.Property<int>("Version");

                    b.Property<Guid>("WorkflowId");

                    b.HasKey("Id");

                    b.HasIndex("FromStateId");

                    b.HasIndex("ToStateId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("Transitions");
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.TransitionAction", b =>
                {
                    b.Property<Guid>("TransitionId");

                    b.Property<Guid>("ActionId");

                    b.HasKey("TransitionId", "ActionId");

                    b.HasIndex("ActionId");

                    b.ToTable("TransitionActions");
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.TransitionRole", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("TransitionId");

                    b.HasKey("RoleId", "TransitionId");

                    b.HasIndex("TransitionId");

                    b.ToTable("TransitionRoles");
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.WorkFlow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("Changed");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<bool>("Enabled");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("TenantId");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.ToTable("WorkFlows");
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.WorkflowAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("Changed");

                    b.Property<string>("ClassName")
                        .IsRequired();

                    b.Property<string>("ClassNameWithNameSpace")
                        .IsRequired();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSystem");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("TenantId");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.ToTable("WorkflowActions");
                });

            modelBuilder.Entity("GR.Audit.Abstractions.Models.TrackAuditDetails", b =>
                {
                    b.HasOne("GR.Audit.Abstractions.Models.TrackAudit")
                        .WithMany("AuditDetailses")
                        .HasForeignKey("TrackAuditId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.State", b =>
                {
                    b.HasOne("GR.WorkFlows.Abstractions.Models.WorkFlow", "WorkFlow")
                        .WithMany("States")
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.Transition", b =>
                {
                    b.HasOne("GR.WorkFlows.Abstractions.Models.State", "FromState")
                        .WithMany()
                        .HasForeignKey("FromStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GR.WorkFlows.Abstractions.Models.State", "ToState")
                        .WithMany()
                        .HasForeignKey("ToStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GR.WorkFlows.Abstractions.Models.WorkFlow", "WorkFlow")
                        .WithMany("Transitions")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.TransitionAction", b =>
                {
                    b.HasOne("GR.WorkFlows.Abstractions.Models.WorkflowAction", "Action")
                        .WithMany("TransitionActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GR.WorkFlows.Abstractions.Models.Transition", "Transition")
                        .WithMany("TransitionActions")
                        .HasForeignKey("TransitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GR.WorkFlows.Abstractions.Models.TransitionRole", b =>
                {
                    b.HasOne("GR.WorkFlows.Abstractions.Models.Transition", "Transition")
                        .WithMany("TransitionRoles")
                        .HasForeignKey("TransitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
