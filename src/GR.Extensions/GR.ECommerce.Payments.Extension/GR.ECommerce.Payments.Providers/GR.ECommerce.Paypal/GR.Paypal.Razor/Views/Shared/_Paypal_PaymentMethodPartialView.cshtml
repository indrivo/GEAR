@using GR.Paypal.Models
@model Guid
@inject IOptions<PaypalExpressConfigForm> Options

@{
    var env = Options.Value.IsSandbox ? "sandbox" : "production";
}

<div id="paypal-button" class="card paypal-button-simulation payment-method-button"></div>
<p style="display: none; color: red" id="paypalPaymentError"></p>

<script src="https://www.paypalobjects.com/api/checkout.js"></script>

<script type="text/javascript">
	paypal.Button.render({
        env: '@env',
        style: {
           size: 'responsive',
            shape: 'rect',
            label: 'paypal',
            height: 55,
            color: 'white'
            },
			commit: true,
			payment: function(data, actions) {
				return paypal.request.post('@Url.Action("CreatePayment", "Paypal", new{ OrderId = Model })')
                    .then(function (res) {
						return res.paymentId;
					})
                    .catch(function (error) {
						const errorDiv = document.getElementById("paypalPaymentError");
						errorDiv.innerText = error;
						errorDiv.style.display = "block";
					});
			},
			onAuthorize: function(data, actions) {
				return paypal.request.post('/Paypal/ExecutePayment',
						{
							paymentID: data.paymentID,
                            payerID: data.payerID,
                            orderId: "@Model"
						})
                    .then(function (res) {
						window.location = `/checkout/success?orderId=${res.orderId}`;
					})
                    .catch(function (error) {
						const errorDiv = document.getElementById("paypalPaymentError");
						errorDiv.innerText = error;
						errorDiv.style.display = "block";
					});
			}
		},
		'#paypal-button');
</script>