@model GR.Procesess.Models.STProcessSchema

@{
	ViewData["Title"] = "Edit Process Diagram";
}

<div class="card card-outline-primary">
	<div class="card-header">
		<h4 class="mb-0 text-white">Edit Process Diagram</h4>
	</div>
	<div class="card-body">
		<form asp-action="Edit" asp-controller="Process" role="form" id="formEdit" method="post">
			<input type="hidden" asp-for="Id"/>
			<div class="form-body">
				<h3 class="card-title">Process Info</h3>
				<hr>
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<div class="row p-t-20">
					<div class="col-md-6">
						<div class="form-group">
							<label asp-for="Title" class="control-label"></label>
							<input asp-for="Title" class="form-control"/>
							<span asp-validation-for="Title" class="text-danger"></span>
						</div>
					</div>
				</div>
				<!--/row-->
				<div class="row">
					<div class="col-md-12">
						<div class="form-group">
							<label asp-for="Diagram" class="control-label"></label>
							<input type="text" class="form-control" asp-for="Diagram" style="visibility: collapse"/>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-12">
						<div class="form-group">
							<div id="canvas" style="height: 500px !important"></div>
						</div>
					</div>
				</div>
			</div>
			<div class="row button-group">
				<div class="col-lg-2 col-md-3">
					<button type="submit" id="finalyzeAction" class="btn btn-block btn-success"> <i class="fa fa-check"></i>Finalize</button>
				</div>
				<div class="col-lg-2 col-md-3">
					<button type="reset" class="btn btn-block  btn-inverse">Reset</button>
				</div>
				<div class="col-lg-2 col-md-3">
					<a asp-action="Index" class="btn btn-block btn-link">Back to list</a>
				</div>
			</div>
			<input id="DiagramHidden" type="hidden" value="@Model.Diagram"/>
		</form>
	</div>
</div>


<link rel="stylesheet" href="~/lib/bpmn-js/dist/assets/diagram-js.css">
<link rel="stylesheet" href="~/lib/bpmn-js/dist/assets/bpmn-font/css/bpmn-embedded.css">
<script src="~/lib/bpmn-js/dist/bpmn-modeler.js"></script>


@section Scripts {
	<script type="text/javascript" language="javascript">
		var xmlDoc = document.getElementById("DiagramHidden");
		if (xmlDoc === "") {
			initialDiagram =
				'<?xml version="1.0" encoding="UTF-8"?><bpmn:definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" targetNamespace="http://bpmn.io/schema/bpmn" id="Definitions_1"><bpmn:process id="Process_1" isExecutable="false"><bpmn:startEvent id="StartEvent_1"/></bpmn:process><bpmndi:BPMNDiagram id="BPMNDiagram_1"><bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_1"><bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1"><dc:Bounds height="36.0" width="36.0" x="173.0" y="102.0"/></bpmndi:BPMNShape></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></bpmn:definitions>';
		} else {
			debugger;
			initialDiagram = xmlDoc.value;
		}

		var viewer = new BpmnJS({
			container: '#canvas'
		});

		viewer.importXML(initialDiagram,
			function(err) {

				if (err) {
					console.log('error rendering', err);
				} else {
					console.log('we are good!');
				}
			});

		// save diagram on button click
		const saveButton = document.querySelector('#finalyzeAction');

		saveButton.addEventListener('click',
			function() {
				// get the diagram contents
				viewer.saveXML({ format: true },
					function(err, xml) {
						if (err) {
							console.error('diagram save failed', err);
						} else {
							document.getElementById("Diagram").value = xml;
							document.getElementById("fromEdit").submit();
						}
					});
			});
	</script>
	@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}