@using ST.Identity.Data.UserProfiles
@using ST.Localization
@using Microsoft.AspNetCore.Http
@using ST.CORE.Models.LocalizationViewModels
@using ST.Identity.Abstractions
@using ST.CORE.Extensions.Installer;


@inject UserManager<ApplicationUser> UserManager
@inject ILocalService LocalService
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig
@inject IHttpContextAccessor Accesor


@if (User.Identity.IsAuthenticated)
{
	<!DOCTYPE html>

	var layoutId = (Guid?)ViewData["layoutId"];
	if (layoutId == null)
	{
		layoutId = WebPageSyncExtension.Layouts[0];
	}

	var cssCode = PageRender.GetLayoutCss(layoutId);
	var styles = PageRender.GetPageStyles(layoutId.Value);
	var scripts = PageRender.GetPageScripts(layoutId.Value);
	var user = await UserManager.GetUserAsync(User);
	var id = Accesor.HttpContext.Session.GetString(LocalizationConfig.Value.SessionStoreKeyName);
	Language language = LocalizationConfig.Value.Languages.FirstOrDefault(l => l.Identifier == id);
	var languages = LocalizationConfig.Value.Languages.Where(x => x.IsDisabled == false);

	<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<style>
			html, body {
				margin: 0px;
			}
		</style>
		@if (!string.IsNullOrEmpty(cssCode))
		{
			<style>
			@Html.Raw(cssCode)
			</style>
		}
		<title>@ViewData["Title"] - Client</title>
		@if (styles.IsSuccess)
		{
			@foreach (var style in styles.Result)
			{
				@Html.Raw(style.Script)
			}
		}
		<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
		<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
		<!--[if lt IE 9]>
			<script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
			<script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
		<![endif]-->
	</head>
	<body class="fix-header fix-sidebar card-no-border">

		@{
			var htmlCode = PageRender.GetLayoutHtml(layoutId);
			var jsCode = PageRender.GetLayoutJavaScript(layoutId);
		}

		@Html.Raw(htmlCode.Item1)

		@RenderBody()

		@Html.Raw(htmlCode.Item2)

		@if (scripts.IsSuccess)
		{
			@foreach (var script in scripts.Result)
			{
				@Html.Raw(script.Script);
			}
		}

		<script>
			window.load = function (uri, data = null, type = "get") {
				try {
					const url = new URL(location.href);
					uri = `${url.origin}${uri}`;

					const req = $.ajax({
						url: uri,
						type: type,
						data: data,
						async: false
					});
					return JSON.parse(req.responseText);
				} catch (exp) {
					console.log(exp);
					return null;
				}
			};
			const notificator = new Notificator();
			st = new ST();
			const controller = "@ViewContext.RouteData.Values["controller"].ToString()";
			const view = "@ViewContext.RouteData.Values["action"].ToString()";

			const settings = {
				layout: {
					id : "@layoutId"
				}
			};
				settings.navigation = {
					view: view,
					controller : controller
				};

		settings.user = {
			userName: "@user.UserName",
			email: "@user.Email",
			id: "@user.Id"
		};

		settings.app = {
			name : "@LocalService.GetAppName("core")"
		};

		settings.localization = {
			languages: window.load("/PageRender/GetLanguages"),
			current: {
				identifier: "@language.Identifier",
				name: "@language.Name"
			}
		};

			localStorage.setItem("settings", JSON.stringify(settings));

		</script>
		@if (!string.IsNullOrEmpty(jsCode))
		{
			<script>
				@Html.Raw(jsCode)
			</script>
		}

		<script src="~/assets/js/form/formeo.min.js"></script>
		<script src="~/assets/js/form/form-generate.js" asp-append-version="true"></script>
		<script src="~/js/signalar.js" asp-append-version="true"></script>
	</body>
</html>
}
else
{
@RenderBody()
}

@RenderSection("Scripts", required: false)
