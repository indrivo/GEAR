@using ST.Identity.Data.UserProfiles
@using Microsoft.AspNetCore.Http
@using ST.Configuration.Seed
@using ST.Configuration.ViewModels.LocalizationViewModels
@using ST.Identity.Abstractions


@inject UserManager<ApplicationUser> UserManager
@inject ILocalService LocalService
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig
@inject IHttpContextAccessor Accesor


@if (User.Identity.IsAuthenticated)
{
	var layoutId = (Guid?)ViewData["layoutId"];
	if (layoutId == null)
	{
		layoutId = PageManager.Layouts[0];
	}

	var user = await UserManager.GetUserAsync(User);
	var id = Accesor.HttpContext.Session.GetString(LocalizationConfig.Value.SessionStoreKeyName);
	var language = LocalizationConfig.Value.Languages.FirstOrDefault(l => l.Identifier == id);
	var languages = LocalizationConfig.Value.Languages.Where(x => x.IsDisabled == false);

	<!DOCTYPE html>
	<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="stylesheet" type="text/css" href="~/lib/bootstrap-treeview/dist/bootstrap-treeview.min.css" />
		<link rel="stylesheet" type="text/css" href="~/lib/jquery-toast-plugin/dist/jquery.toast.min.css" />
		<title>@ViewData["Title"] - Gear</title>
		<layout-css-code layout-id="@layoutId"></layout-css-code>
		<application-styles layout-id="@layoutId"></application-styles>
		<application-scripts layout-id="@layoutId"></application-scripts>

		<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
		<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
		<!--[if lt IE 9]>
			<script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
			<script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
		<![endif]-->
	</head>
	<body class="fix-header fix-sidebar card-no-border">
		<application layout-id="@layoutId">
			@RenderBody()
		</application>

		<script>
			window.load = function (uri, data = null, type = "get") {
				try {
					const url = new URL(location.href);
					uri = `${url.origin}${uri}`;

					const req = $.ajax({
						url: uri,
						type: type,
						data: data,
						async: false
					});
					return JSON.parse(req.responseText);
				} catch (exp) {
					console.log(exp);
					return null;
				}
			};
			const notificator = new Notificator();
			st = new ST();
			const controller = "@ViewContext.RouteData.Values["controller"].ToString()";
			const view = "@ViewContext.RouteData.Values["action"].ToString()";

			const storageSettings = localStorage.getItem("settings");
			if (storageSettings) {
				var s = JSON.parse(storageSettings);
				s.user = {
					userName: "@user.UserName",
					email: "@user.Email",
					id: "@user.Id"
				};
				storageSettings.navigation = {
					view: view,
					controller: controller
				};
				s.layout = {
					id: "@layoutId"
				};
				s.localization.current = {
					identifier: "@language?.Identifier",
					name: "@language?.Name"
				};

				localStorage.setItem("settings", JSON.stringify(s));
			} else {
				const s = {
					layout: {
						id : "@layoutId"
					}
				};
				s.navigation = {
					view: view,
					controller : controller
				};

				s.user = {
					userName: "@user.UserName",
					email: "@user.Email",
					id: "@user.Id"
				};

				s.app = {
					name : "@LocalService.GetAppName("core")"
				};

				s.localization = {
					languages: window.load("/PageRender/GetLanguages"),
					current: {
						identifier: "@language.Identifier",
						name: "@language.Name"
					}
				};
				localStorage.setItem("settings", JSON.stringify(s));
			}
		</script>
		<layout-js-code layout-id="@layoutId"></layout-js-code>

		<script src="~/assets/js/form/formeo.min.js"></script>
		<script src="~/assets/js/form/form-generate.js" asp-append-version="true"></script>
		<script src="~/js/signalar.js" asp-append-version="true"></script>
		<script src="~/lib/jquery-toast-plugin/dist/jquery.toast.min.js"></script>
		<script src="~/js/dataTable-extension-column-visibility.js"></script>
	</body>
</html>
}
else
{
@RenderBody()
}

@RenderSection("Scripts", required: false)
