@using ST.Entities.Models.Forms;
@{
	ViewData["Title"] = "Edit form";
	var form = (Form)ViewBag.Form;
}

<div class="row" id="form">
	<div class="col-lg-12">
		<div class="card card-outline-primary">
			<div class="card-header">
				<h4 class="m-b-0 text-white">Edit form</h4>
			</div>
			<div class="card-block">
				<div role="form">
					<div class="form-body">
						<hr />
						<div class="col-md-12">
							<div class="form-group">
								<label class="control-label" for="form_name">Form Name</label>
								<input class="form-control" type="text" name="Name" id="form_name" value="@form.Name" /><br />
								<small>Set name of this form.</small>
							</div>
						</div>
						<div class="col-md-12">
							<div class="form-group">
								<label class="control-label" for="form_postUrl">Post Url</label>
								<input class="form-control" placeholder="Use default" type="text" id="form_postUrl" value="@form.PostUrl" /><br />
								<small>Set post url for this form.</small>
							</div>
						</div>
						<div class="col-md-12">
							<div class="form-group">
								<label class="control-label" for="form_redirectUrl">Redirect Url</label>
								<input class="form-control" type="text" id="form_redirectUrl" value="@form.RedirectUrl" /><br />
								<small>Set redirect url for this form.</small>
							</div>
						</div>
						<div class="col-md-12">
							<div class="form-group">
								<label class="control-label" for="form_description">Form Description</label>
								<textarea class="form-control" type="text" id="form_description">@form.Description</textarea><br />
								<small>Set description of this form.</small>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="col-md-12">
		<div class="card">
			<div class="card-body p-b-0">
				<h4 class="card-title">Form Builder</h4>
				<h6 class="card-subtitle">Builder for choose form proprietes</h6>
			</div>
			<!-- Nav tabs -->
			<ul class="nav nav-tabs customtab" role="tablist">
				<li class="nav-item"> <a class="nav-link active" id="EditForm" data-toggle="tab" href="#messages2" role="tab"><span class="hidden-sm-up"><i class="ti-email"></i></span> <span class="hidden-xs-down">Edit</span></a> </li>
				<li class="nav-item"> <a class="nav-link" id="RenderForm" data-toggle="tab" href="#profile2" role="tab"><span class="hidden-sm-up"><i class="ti-user"></i></span> <span class="hidden-xs-down">Preview</span></a> </li>
			</ul>
			<!-- Tab panes -->
			<div class="tab-content">

				<div class="tab-pane active p-20" id="messages2" role="tabpanel">
					<section id="main_content" class="inner">
						<form class="build-form clearfix"></form>
					</section>
				</div>
				<div class="tab-pane  p-20" id="profile2" role="tabpanel">
					<h3><i class="big wpforms icon"></i> Generated Form with FORM BUILDER</h3>
					<form class="render-form ui form"></form>
				</div>
			</div>
		</div>
	</div>

	<div class="row button-group col-md-12">
		<div class="col-lg-2 col-md-3">
			<a href="#" id="saveData" class="btn btn-block btn-success"> <i class="fa fa-eye"></i> Update</a>
		</div>
		<div style="display: none" class="col-lg-2 col-md-3">
			<a href="#" id="viewData" class="btn btn-block btn-warning"> <i class="fa fa-eye"></i> console.log Data</a>
		</div>
		<div style="display: none" class="col-lg-2 col-md-3">
			<a href="#" id="reloadBtn" class="btn btn-block  btn-warning"> Reset Editor</a>
		</div>
	</div>

	<input id="formtypeId" type="hidden" value="@form.Type.Id" />
</div>
@section Scripts{
	<script src="~/lib/jsrender/jsrender.min.js"></script>
	<script src="~/lib/jsviews/jsviews.min.js"></script>
	<script src="~/assets/js/form/form-generate.js" asp-append-version="true"></script>
	<script src="~/assets/js/form/formeo.min.js"></script>
	<script>
		//Declarations
		let renderContainer = document.querySelector('.render-form');
		var fr = new Form();
		var s = new ST();
		let editing = true;
		let toggleEdit = document.getElementById('renderForm');
		let viewDataBtn = document.getElementById('viewData');
		let SaveDataBtn = document.getElementById('saveData');
		let resetDemo = document.getElementById('reloadBtn');

		//Events
		$(document).ready(function () {
			Init();
		});

		function Init() {
			const form = new Form();
			const id = form.getFromUrl("formId");
			const data = form.getFormFronServer(id);
			const f = form.attrsToArray(data);
			const formeo = new window.Formeo(fr.getOptions('.build-form', "@form.TableId"), JSON.stringify(f));
			fr.registerChangeRefEvent(formeo, "@form.TableId");
			document.querySelector("#RenderForm").onclick = evt => {
				if (!editing) {
					formeo.render(renderContainer);
				}

				return editing = !editing;
			};

			document.querySelector("#EditForm").onclick = evt => {
				return editing = !editing;
			};
			resetDemo.onclick = function () {
				window.sessionStorage.removeItem('formData');
				location.reload();
			};

			viewDataBtn.onclick = evt => {
				console.log(formeo.formData);
			};
			$("#form").on("submit", function (e) {
				let form = JSON.parse(formeo.formData);
				form = fr.attrsToString(form);
				$.ajax({
					url: "/api/Form/UpdateForm",
					method: "post",
					data: {
						form: form,
						formId: "@form.Id",
						name: $("#form_name").val(),
						description: $("#form_description").val(),
						postUrl: $("#form_postUrl").val(),
						redirectUrl: $("#form_redirectUrl").val()
					},
					success: function (data) {
						if (data) {
							if (data.is_success) {
								location.href = "/Form";
							}
							else {
								alert("Fail! View console.log");
								console.log(data);
							}
						}
					},
					error: function (error) {
						console.log(error);
					}
				});
			});
			SaveDataBtn.onclick = evt => {
				const formObj = $("#form_name");
				const formName = formObj.val();
				if (formName === "") {
					formObj.focus();
					return;
				}
				fr.data = JSON.parse(formeo.formData);
				$("#form").submit();
			};
		}
	</script>
}