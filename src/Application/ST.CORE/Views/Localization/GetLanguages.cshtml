@using ST.CORE.Models.LocalizationViewModels
@inject IStringLocalizer Localizer
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig

@{
	ViewData["Title"] = "GetLanguages";
	var languages = LocalizationConfig.Value.Languages;
	var sel = new SelectList(languages, "Identifier", "Name");
}


<div class="card">
	<div class="card-body">
		<h4 class="card-title"></h4>
		<h6 class="card-subtitle">List of languages</h6>
		<div class="table-responsive">
			<div class="mt-2">
				<div class="d-flex">
					<div class="mr-auto">
						<div class="form-group">
							<a asp-action="AddLanguage" class="btn btn-primary btn-sm">
								<i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>@Localizer["add_language"]
							</a>
							<small>New language will be added.</small>
						</div>
					</div>
				</div>
			</div>
			<table class="table table-striped table-bordered" id="tableLanguage">
				<thead>
					<tr>
						<th>Name</th>
						<th>Identifier</th>
						<th>Is Disabled</th>
						<th style="max-width: 70px">Actions</th>
					</tr>
				</thead>
				<tbody></tbody>
			</table>

		</div>
	</div>
</div>
@section Scripts
	{
	<script type="text/javascript" language="javascript">
		function getTokenAntiForgery() {
			const token = '@Html.AntiForgeryToken()';
			return $(token).val();
		}

	</script>
	<script language="javascript" type="text/javascript">
		$(document).ready(function($) {
			const tableId = '#tableLanguage';
			if ($.fn.DataTable.isDataTable(tableId)) {
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}

			$(tableId).DataTable({
				dom: '<"CustomizeColumns">lBfrtip',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("LanguageList")',
					"type": "POST"
				},
				"columns": [
					{ "data": "name" },
					{ "data": "identifier" },
					{ "data": "isDisabled" },
					{
						data: null,
						render: function (data) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<button type="button" class='btn btn-danger btn-sm' onclick=CreateAlert('${data.identifier}'); >Delete</button>
									</div>`;
						}
					}
				]
			});
		});
		function CreateAlert(rowId) {
			const object = {
				alertTitle: "Delete this language?",
				alertText: "are you sure that you want to leave this language?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#tableKeys",
				urlForDelete: '@Url.Action("")',
				type:"warning",
				onDeleteSuccess: "Language has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse:"Api not respond or not have permissions."
			};
			DeleteData(object);
		}
	</script>
}
