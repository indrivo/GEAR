@model ST.Entities.Abstractions.ViewModels.Table.UpdateTableViewModel

@{
	ViewData["Title"] = Localizer["edit"];
}

<form asp-action="Edit" role="form" class="ui form">
	<input type="hidden" asp-for="Id" />
	<input type="hidden" asp-for="Name" />
	<input type="hidden" asp-for="EntityType" />
	<input type="hidden" asp-for="ModifiedBy" />
	<input type="hidden" asp-for="Created" />
	<input type="hidden" asp-for="TenantId" />
	<input type="hidden" id="tabValue" value="@Model.TabName" />
	<div class="card">
		<div class="card-body pb-0">
			<h4 class="card-title">@Localizer["system_table_edit"]</h4>
		</div>
		<div id="menuTab">
			<!-- Nav tabs -->
			<ul class="nav nav-tabs customtab" role="tablist">
				<li class="nav-item">
					<a class="nav-link active" data-toggle="tab" href="#itemOne" role="tab">
						<span class="hidden-sm-up">
							<i class="ti-home"></i>
						</span> <span class="hidden-xs-down">@Localizer["system_entity_info"]</span>
					</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" data-toggle="tab" href="#itemTwo" role="tab">
						<span class="hidden-sm-up">
							<i class="ti-user"></i>
						</span> <span class="hidden-xs-down">@Localizer["system_table_fields"]</span>
					</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" data-toggle="tab" href="#itemThree" role="tab">
						<span class="hidden-sm-up">
							<i class="ti-email"></i>
						</span> <span class="hidden-xs-down">@Localizer["forms"]</span>
					</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" data-toggle="tab" href="#view_model_tab" role="tab">
						<span class="hidden-sm-up">
						</span> <span class="hidden-xs-down">@Localizer["view_models"]</span>
					</a>
				</li>
			</ul>
			<!-- Tab panes -->
			<div class="tab-content">
				<!--Tab_1-->
				<div class="tab-pane active" id="itemOne" role="tabpanel">
					<div class="p-20">
						<blockquote>
							<div class="font-weight-bold">@Localizer["system_entity_general_info"]</div>
							<ul class="list-icons">
								<li>
									<strong>@Localizer["entity_name"]: </strong> <i class="ti-angle-right mr-2"></i>@Model.Name
								</li>
								<li>
									<strong>@Localizer["entity_type"]: </strong><i class="ti-angle-right mr-2"></i> @Model.EntityType
								</li>
								<li>
									<strong>@Localizer["created"]: </strong><i class="ti-angle-right mr-2"></i>@Model.Created
								</li>
							</ul>
						</blockquote>

						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label asp-for="Description" class="control-label"></label>
							<textarea rows="3" asp-for="Description" class="form-control"></textarea>
							<span asp-validation-for="Description" class="text-danger"></span>
						</div>
					</div>

					<div class="row p-3 button-group">
						<div class="col-lg-2 col-md-3">
							<button type="submit" class="btn btn-block btn-success"> <i class="fa fa-check"></i>@Localizer["save"]</button>
						</div>
						@if (!Model.IsSystem)
						{
							<div class="col-lg-2 col-md-3">
								<a href="#" class="btn btn-block btn-danger sa-delete-table"> <i class="fa fa-close"></i>@Localizer["delete"]</a>
							</div>
						}

						<div class="col-lg-2 col-md-3">
							<a asp-action="Index" class="btn btn-block btn-link">@Localizer["back"]</a>
						</div>
					</div>
				</div>
				<!--End_Tab_1-->
				<!--Tab_2-->
				<div class="tab-pane p-20" id="itemTwo" role="tabpanel">
					<div class="row">
						@if (!Model.IsPartOfDbContext)
						{
							<div class="col-md-12">
								<div class="btn-group mb-4">
									<button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
										@Localizer["system_add_new_entity_field"]
									</button>
									<div class="dropdown-menu " style="overflow-y: auto;">
										@foreach (var item in Model.Groups)
										{
											<a class="dropdown-item" style="font-weight: bold;" href="#">@item.GroupName</a>
											foreach (var type in item.TableFieldTypes)
											{
												<a class="dropdown-item" asp-action="AddField" asp-route-id="@Model.Id" asp-route-type="@type.Name">@type.Name</a>
											}
											<div class="dropdown-divider"></div>
										}
									</div>
								</div>
							</div>
						}
						<div class="col-md-12">
							@if (Model.TableFields.Any())
							{
								<table class="table table-hover contact-list color-table purple-table">
									<thead class="full-width">
										<tr>
											<th>@Localizer["system_field_name"]</th>
											<th>@Localizer["system_data_type"]</th>
											<th>@Localizer["system_allow_null"]</th>
											<th>@Localizer["created"]</th>
											<th>@Localizer["list_actions"]</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var item in Model.TableFields)
										{
											<tr>
												<td>
													@Html.DisplayFor(modelItem => item.Name)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.DataType)
												</td>
												<td style="text-align: center">
													@if (item.AllowNull)
													{
														<i class="fa fa-check"></i>
													}
													else
													{
														<i class="fa fa-minus"></i>
													}
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Created)
												</td>
												<td>
													@if (!item.IsSystem)
													{
														if (!Model.IsPartOfDbContext)
														{
															<a asp-action="EditField" asp-route-type="@item.TableFieldTypeId" asp-route-fieldId="@item.Id" class="btn btn-sm btn-icon btn-pure btn-outline" data-toggle="tooltip" data-original-title="Edit">
																<i class="ti-pencil" aria-hidden="true"></i>
															</a>
															<a href="#" data-id="@item.Id" class="sa-delete btn btn-sm btn-icon btn-pure btn-outline" data-toggle="tooltip" data-original-title="Delete">
																<i class="ti-close" aria-hidden="true"></i>
															</a>
														}
														else
														{
															<a class="" style="width: 155px">@Localizer["system_system_field"]</a>
														}
													}
													else
													{
														<a class="" style="width: 155px">@Localizer["system_system_field"]</a>
													}
												</td>
											</tr>
										}
									</tbody>
								</table>
							}
							else
							{
								<div class="ui horizontal divider">
									@Localizer["system_no_entity_fields"]
								</div>
							}
						</div>
					</div>
				</div>
				<!--End_Tab_2-->
				<!--Tab_3-->
				<div class="tab-pane p-20" id="itemThree" role="tabpanel">

					<div class="row">
						<div class="card col-md-12">
							<div class="card-body">
								<h4 class="card-title">@Localizer["forms"]</h4>
								<h6 class="card-subtitle">List of forms</h6>
								<div class="table-responsive">
									<div class="mt-2">
										<div class="d-flex">
											<div class="mr-auto">
												<div class="form-group">
													<a asp-action="Create" asp-controller="Form" class="btn btn-primary btn-sm">
														<i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>@Localizer["add_forms"]
													</a>
													<small>New form will be added.</small>
												</div>
											</div>
										</div>
									</div>
									<table style="margin: 0em; width: 100%;" class="table table-striped table-bordered" id="formTable">
										<thead>
											<tr>
												<th>@Html.DisplayNameFor(model => model.Name)</th>
												<th>@Localizer["entity_name"]</th>
												<th>@Localizer["description"]</th>
												<th>@Localizer["created"]</th>
												<th>@Localizer["changed"]</th>
												<th>@Localizer["author"]</th>
												<th>@Localizer["id_deleted"]</th>
												<th>@Localizer["list_actions"]</th>
											</tr>
										</thead>
										<tbody></tbody>
										<tfoot></tfoot>
									</table>
								</div>
							</div>
						</div>
					</div>
				</div>
				<!--End_Tab_3-->
				<!--Tab 4-->
				<div class="tab-pane p-20" id="view_model_tab" role="tabpanel">
					<div class="card">
						<div class="card-body">
							<h4 class="card-title">View Models</h4>
							<h6 class="card-subtitle">List of view models</h6>
							<div class="table-responsive">
								<div class="mt-2">
									<div class="d-flex">
										<div class="mr-auto">
											<div class="form-group">
												<a id="addViewModel" href="#" class="btn btn-primary btn-sm">
													<i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>Add view model
												</a>
												<small>New view model will be added.</small>
											</div>
										</div>
									</div>
								</div>
								<table style="margin: 0em; width: 100%;" class="table table-striped table-bordered" id="viewModelTable">
									<thead>
										<tr>
											<th>Name</th>
											<th>@Localizer["table"]</th>
											<th>@Localizer["created"]</th>
											<th>@Localizer["changed"]</th>
											<th>@Localizer["author"]</th>
											<th>@Localizer["is_deleted"]</th>
											<th>@Localizer["list_actions"]</th>
										</tr>
									</thead>
									<tbody></tbody>
									<tfoot></tfoot>
								</table>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</form>


@section Scripts {
	<script language="javascript" type="text/javascript">
		$(document).ready(function() {
			$('.sa-delete').click(function() {
				const id = $(this).attr("data-id");
				swal({
					title: "Are you sure?",
					text: "You will not be able to recover this field!",
					type: "warning",
					showCancelButton: true,
					confirmButtonColor: "#DD6B55",
					confirmButtonText: "Yes, delete it!",
					cancelButtonText: window.translate("cancel"),
					closeOnConfirm: false
				}).then(() => {
						$.ajax({
							url: '@Url.Action("DeleteField", "Table")',
							method: "get",
							dataType: "json",
							contentType: "application/x-www-form-urlencoded; charset=utf-8",
							data: {
								id: id
							},
							success: function(data) {
								if (data) {
									swal("Deleted!", "Field has been deleted.", "success");
									location.reload();
								} else {
									swal("Fail!", "Api not respond or not have permissions.", "error");
								}
							},
							error: function(error) {
								swal("Fail!", "Api not respond or not have permissions.", "error");
							}
						});
					});
			});

			$('.sa-delete-table').click(function() {
				swal({
					title: "Are you sure?",
					text: "You will not be able to recover this table!",
					type: "warning",
					showCancelButton: true,
					confirmButtonColor: "#DD6B55",
					confirmButtonText: "Yes, delete it!",
					cancelButtonText: window.translate("cancel"),
					closeOnConfirm: false
				}).then(() => {
						$.ajax({
							url: '@Url.Action("DeleteTable", "Table")',
							method: "get",
							dataType: "json",
							contentType: "application/x-www-form-urlencoded; charset=utf-8",
							data: {
								id: "@Model.Id"
							},
							success: function(data) {
								if (data === 0) {
									swal("Deleted!", "Table has been deleted.", "success");
									window.location.href = '@Url.Action("Index", "Table")';
								} else {
									swal("Fail!", "Api not respond or not have permissions.", "error");
								}
							},
							error: function(error) {
								swal("Fail!", "Api not respond or not have permissions.", "error");
							}
						});
					});
			});
		});
	</script>

	<script type="text/javascript" language="javascript">
		function getTokenAntiForgery() {
			const token = '@Html.AntiForgeryToken()';
			return $(token).val();
		}
	</script>
	<script type="text/javascript" language="javascript">
		$(document).ready(function ($) {
			const tableId = '#formTable';
			if ($.fn.DataTable.isDataTable(tableId)) {
				alert();
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}
			$(tableId).DataTable({
				"language": {
					"url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
				},
				dom: '<"CustomizeColumns">lBfrtip',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("LoadForms", "Form")',
					"type": "POST",
					"data": {
						entityId: "@Model.Id"
					}
				},
				"columns": [
					{ "data": "name" },
					{ "data": "tableName" },
					{ "data": "description" },
					{ "data": "created" },
					{ "data": "changed" },
					{ "data": "author" },
					{ "data": "isDeleted" },
					{
						data: null,
						"render": function(data, type, row, meta) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit", "Form")?formId=${row.id}">Edit</a>
									<a class="btn btn-warning btn-sm" href="@Url.Action("Preview", "Form")?formId=${row.id}">Preview</a>
									<button type="button" class='btn btn-danger btn-sm' onclick=createAlert('${row.id
								}'); >Delete</button>
									</div>`;
						}
					}
				]
			});
		});

		function createAlert(rowId) {
			const object = {
				alertTitle: "Delete this form?",
				alertText: "Are you sure that you want to leave this form?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#formTable",
				urlForDelete: '@Url.Action("Delete", "Form")',
				type:"warning",
				onDeleteSuccess: "Form has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse:"Api not respond or not have permissions."
			};
			DeleteData(object);
		}
	</script>

	<script type="text/javascript" language="javascript">
		$(document).ready(function ($) {
			const ent = load("/PageRender/GetEntities");
			const model = { };

			$.each(ent, function (index, item) {
				model[item.id] = item.name;
			});

			$("#addViewModel").on("click", function () {
				swal({
					title: "Are you sure to generate view model for this entity?",
					text: "A view model will be generated",
					type: "warning",
					showCancelButton: true,
					confirmButtonColor: "#DD6B55",
					confirmButtonText: "Yes, create",
					cancelButtonText: window.translate("cancel")
				}).then(function (result) {
					$.ajax({
						url: "@Url.Action("GenerateViewModel", "ViewModel")",
						type: "post",
						data: {
							entityId: "@Model.Id"
						},
						success: function (data) {
							if (!data) {
								swal("Fail!", "Internal server error", "error");
							}
							else
							if (data.is_success) {
								location.href = `/ViewModel/OrderFields?id=${data.result}`;
							}
						},
						error: function () {
							swal("Fail!", "Internal server error", "error");
						}
					});
				});
			});

			const tableId = '#viewModelTable';
			if ($.fn.DataTable.isDataTable(tableId)) {
				alert();
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}
			$(tableId).DataTable({
				"language": {
					"url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
				},
				dom: '<"CustomizeColumns">lBfrtip',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("LoadViewModels", "ViewModel")',
					"type": "POST",
					"data": {
						entityId: "@Model.Id"
					}
				},
				"columns": [
					{ "data": "name" },
					{ "data": "table" },
					{ "data": "created" },
					{ "data": "changed" },
					{ "data": "author" },
					{ "data": "isDeleted" },
					{
						data: null,
						"render": function(data, type, row, meta) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit", "ViewModel")?id=${row.id
								}">Edit</a>
									<a class="btn btn-primary btn-sm" href="@Url.Action("OrderFields", "ViewModel")?id=${
								row.id}">Order Fields</a>
									<button type="button" class='btn btn-danger btn-sm' onclick=deleteViewModel('${row.id
								}'); >Delete</button>
									</div>`;
						}
					}
				]
			});
		});

		function deleteViewModel(rowId) {
			const object = {
				alertTitle: "Delete this view model?",
				alertText: "Are you sure that you want to leave this view model?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#viewModelTable",
				urlForDelete: '@Url.Action("Delete", "ViewModel")',
				type:"warning",
				onDeleteSuccess: "View model has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse:"Api not respond or not have permissions."
			};
			DeleteData(object);
		}
	</script>
}