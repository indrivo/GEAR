@{
	ViewData["Title"] = Localizer["tables"];
}

<div class="card">
	<div class="card-body">
		<h4 class="card-title">@Localizer["tables"]</h4>
		<h6 class="card-subtitle"></h6>
		<div class="table-responsive">
			<div class="mt-2">
				<div class="d-flex">
					<div class="mr-auto">
						<div class="form-group">
							<a asp-action="Create" class="btn btn-primary btn-sm">
								<i class="mdi mdi-circle-edit-outline mr-2" aria-hidden="true"></i>@Localizer["add_table"]
							</a>
							<small>@Localizer["add_table_info"]</small>
						</div>
					</div>
				</div>
			</div>
			<table class="table table-striped table-bordered" id="tableGrid">
				<thead class="full-width">
					<tr>
						<th>@Localizer["entity_name"]</th>
						<th>@Localizer["entity_type"]</th>
						<th>@Localizer["created"]</th>
						<th>@Localizer["changed"]</th>
						<th>@Localizer["list_actions"]</th>
					</tr>
				</thead>
				<tbody></tbody>
			</table>
		</div>
	</div>
</div>

@section Scripts{
	<script type="text/javascript" language="javascript">

		function getTokenAntiForgery() {
			const token = '@Html.AntiForgeryToken()';
			return $(token).val();
		}
	</script>
	<script language="javascript" type="text/javascript">
		$(document).ready(function($) {
			const tableId = '#tableGrid';
			if ($.fn.DataTable.isDataTable(tableId)) {
				$(tableId).dataTable().fnDestroy();
				$(tableId).dataTable().empty();
			}

			$(tableId).DataTable({
				"language": {
					"url": `http://cdn.datatables.net/plug-ins/1.10.19/i18n/${window.getCookie("language")}.json`
				},
				dom: '<"CustomizeColumns">lBfrtip',
				"processing": true, // for show progress bar
				"serverSide": true, // for process server side
				"filter": true, // this is for disable filter (search box)
				"orderMulti": false, // for disable multiple column at once
				"destroy": true,
				"ajax": {
					"url": '@Url.Action("OrderList")',
					"type": "POST"
				},
				"columns": [

					{ "data": "name" },
					{ "data": "entityType" },
					{ "data": "created" },
					{ "data": "changed" },
					{
						data: null,
						render: function(data, type, row) {
							return `<div class="btn-group" role="group" aria-label="Action buttons">
									<a class="btn btn-info btn-sm" href="@Url.Action("Edit")?id=${row.id}">${window.translate("edit")}</a>
									<a class="btn btn-warning btn-sm" onclick="scaffoldClickEvent('${row.id}')" href="#">Scaffold</a>
									<button type="button" class='btn btn-danger btn-sm' onclick="CreateAlert('${row.id}');">${window.translate("delete")}</button></div>`;
						}
					}
				]
			});
		});
		function CreateAlert(rowId) {
			const object = {
				alertTitle: "Delete this table?",
				alertText: "are you sure that you want to leave this table?",
				confirmButtonText: "Yes, delete it!",
				rowId: rowId,
				tableId: "#tableGrid",
				urlForDelete: '@Url.Action("DeleteTable")',
				type:"warning",
				onDeleteSuccess: "Table has been deleted.",
				onDeleteFail: "Something wrong",
				onServerNoResponse:"Api not respond or not have permissions."
			};
			DeleteData(object);
		}

		function scaffoldClickEvent(id) {
			if (!id) {
				Swal.fire({
					type: 'error',
					title: 'Oops...',
					text: 'Something went wrong!'
				});
				return;
			}
	swal({
		title: window.translate("scaffold_modal_title"),
		text: window.translate("scaffold_modal_text"),
		type: "warning",
		showCancelButton: true,
		confirmButtonColor: "#3085d6",
		cancelButtonColor: "#d33",
		confirmButtonText: window.translate("scaffold_modal_confirm"),
		cancelButtonText: window.translate("cancel")
	}).then((result) => {
		if (result.value) {
			location.href = `@Url.Action("Scaffold", "Page")?tableId=${id}`;
		}
	});
}
	</script>
}
