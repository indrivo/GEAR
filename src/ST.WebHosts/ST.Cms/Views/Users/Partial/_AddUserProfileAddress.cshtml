@model ST.Identity.Razor.Users.ViewModels.UserProfileViewModels.UserProfileAddress.AddUserProfileAddressViewModel

<form asp-controller="Users" asp-action="AddUserProfileAddress" name="AddUserProfileAddress" id="AddUserProfileAddress" autocomplete="off" method="post">
	<div class="modal-header px-4">
		<h5 class="modal-title" id="exampleModalLabel">Add new address</h5>
		<button type="button" class="close" data-dismiss="modal" aria-label="Close">
			<span class="material-icons ">close</span>
		</button>
	</div>
	<div class="modal-body p-4">
		<div class="form-group">
			<label asp-for="ContactName"></label>
			<input class="form-control" asp-for="ContactName">
			<span asp-validation-for="ContactName" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="Phone"></label>
			<input class="form-control" asp-for="Phone">
			<span asp-validation-for="Phone" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="SelectedCountryId"></label>
			<select class="form-control" asp-for="SelectedCountryId" asp-items="Model.CountrySelectListItems"></select>
			<span asp-validation-for="SelectedCountryId" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="SelectedStateOrProvinceId"></label>
			<select class="form-control" asp-for="SelectedStateOrProvinceId" disabled="disabled"></select>
			<span asp-validation-for="SelectedStateOrProvinceId" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="AddressLine1"></label>
			<input class="form-control" asp-for="AddressLine1">
			<span asp-validation-for="AddressLine1" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="AddressLine2"></label>
			<input class="form-control" asp-for="AddressLine2">
			<span asp-validation-for="AddressLine2" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="ZipCode"></label>
			<input class="form-control" asp-for="ZipCode">
			<span asp-validation-for="ZipCode" class="text-danger"></span>
		</div>
	</div>
	<div class="modal-footer px-4">
		<button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["cancel"]</button>
		<button type="submit" class="btn btn-primary">@Localizer["save"]</button>
	</div>
</form>

<script type="text/javascript">
	$("form[name='AddUserProfileAddress']").submit(function(e) {
		e.preventDefault();
		const form = $(this);
		if (!$(this).validate()) {
			return;
		}
		$.ajax({
			type: form.attr('method'),
			url: form.attr('action'),
			data: form.serialize()
		}).done((data) => {
			if (data.is_success) {
				notification.notify({ icon: "success", heading: "Success" });
				$('#modal-container').modal('hide');
			} else {
				new ToastNotifier().notifyErrorList(data.error_keys);
			}

		}).fail(() => {
			notify({ heading: "Error", text: "@Localizer["system_internal_error"]" });
		});
	});
</script>
<script type="text/javascript">
	$("#SelectedCountryId").change(function() {
		const selectedValue = this.value;
		const citySelect = $("#SelectedStateOrProvinceId");
		if ($("#SelectedCountryId").prop('selectedIndex') > 0) {
			$.ajax({
				type: "GET",
				url: `@Url.Action("GetCityByCountryId", "Users")/?countryId=${selectedValue}`
			}).done((response) => {
				if (response.is_success) {
					citySelect.empty();
					citySelect.prop("disabled", false);
					for (let city of response.result) {
						citySelect.append(new Option(city.text, city.value, false, city.selected));
					}
				} else {
					notification.notifyErrorList(response.error_keys);
				}
			}).fail(() => {
				notify({ heading: "Error", text: window.translate("system_internal_error") });
			});
		} else {
			citySelect.prop("disabled", true);
			citySelect.empty();
		}
	});
</script>
<script type="text/javascript">
	$('select').select2();
</script>