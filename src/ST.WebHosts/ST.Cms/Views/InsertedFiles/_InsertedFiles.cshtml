
<div class="col-lg-12">
	<div class="card">
		<div class="card-block">
			<div class="table-responsive">
				<div class="m-t-40">
					<div class="d-flex">
						<div class="mr-auto">
							<div class="form-group">								
									<a asp-action="Create" class="btn btn-primary btn-sm text-white">
										<i class="icon wb-plus" aria-hidden="true"></i>Add Iso File
									</a>						

								<small>New File will be added.</small>
							</div>
						</div>
					</div>
				</div>
				<table class="table table-striped table-bordered" id="ContactsTable">
					<thead>
						<tr>
							<th>Title</th>
							<th>Created</th>
							<th>Author</th>
							@*<th>Path</th>*@
							<th>Cod Document</th>
							<th>Description</th>
							<th>Target Group</th>
							<th>Status</th>
							<th style="max-width: 100px">Actions</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript" language="javascript">
    function getTokenAntiForgery() {
        const token = '@Html.AntiForgeryToken()';
        return $(token).val();
    }
</script>
<script language="javascript" type="text/javascript">
    $(document).ready(function($) {
        const tableId = '#ContactsTable';
        if ($.fn.DataTable.isDataTable(tableId)) {
            $(tableId).dataTable().fnDestroy();
            $(tableId).dataTable().empty();
        }

        $(tableId).DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "destroy": true,
            "ajax": {
                "url": '@Url.Action("IsoFilesList")',
                "type": "POST"
            },
            "columns":
            [
                { "data": "title" },
                { "data": "created"},
                { "data": "author"},
                //{ "data": "path" },
				{ "data": "codDocument" },
                { "data": "description" },
				{ "data": "targetGroup" },
				{ "data": "status" },
                
			 
				{
                    render: function (data, type, full, meta) {
						const viewBtn = `<a class="btn btn-info btn-sm text-white" href="@Url.Action("Download", "InsertedFiles")?id=${full.id}">View</a>`;
						const editBtn = `<a class="btn btn-info btn-sm text-white" href="@Url.Action("Edit")?id=${full.id}">Edit</a>`;
						return `<div class="btn-group" role="group" aria-label="Action buttons">${viewBtn + editBtn}</div>`;                        
                    }
                }           
               
                ]
        });
    });
    function CreateAlert(rowId) {
        const object = {
            alertTitle: "Delete this File?",
            alertText: "are you sure that you want to delete this File?",
            confirmButtonText: "Yes, delete it!",
            rowId: rowId,
            tableId: "#ContactsTable",
            urlForDelete: '@Url.Action("DeleteContact", "Contact")',
            type: "warning",
            onDeleteSuccess: "Contact has been deleted.",
            onDeleteFail: "Something wrong",
            onServerNoResponse: "Api not respond or not have permissions."
        };
        DeleteData(object);
    }
</script>
