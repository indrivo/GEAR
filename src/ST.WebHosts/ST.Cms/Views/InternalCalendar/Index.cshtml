@{
	ViewData["Title"] = "Internal Calendar";
}

@section Styles
{
	<link rel="stylesheet" type="text/css" href="~/calendar/css/fullcalendar-rewrite.css" />
	<style>
		.fc-toolbar .fc-left {
			float: right;
		}

		.fc-toolbar .fc-right {
			float: left;
		}

		.fc-toolbar .fc-button {
			background: transparent;
			outline: none;
			border: 0;
			box-shadow: none;
			cursor: pointer;
			text-transform: capitalize;
			border-radius: 0;
		}

		.fc-toolbar .fc-month-button,
		.fc-toolbar .fc-agendaWeek-button,
		.fc-toolbar .fc-agendaDay-button {
			color: #818999;
			border-bottom: 2px solid transparent;
			margin-right: 10px;
			font-size: 18px;
		}

		.fc-toolbar .fc-right .fc-state-active {
			color: #2862D6;
			border-bottom: 2px solid #2862D6;
		}

		.fc-toolbar .fc-left .fc-button-group {
			background-color: #FFFFFF;
			border: 1px solid #D8DCE0;
			height: 40px;
			display: flex;
			align-items: center;
		}

		.fc-toolbar .fc-prev-button,
		.fc-toolbar .fc-next-button {
			height: 100%;
			width: 40px;
			display: inline-flex;
			justify-content: center;
			align-items: center;
		}

		.fc-toolbar .fc-prev-button {
			border-right: 1px solid #D8DCE0;
		}

		.fc-toolbar .fc-next-button {
			border-left: 1px solid #D8DCE0;
		}

		.fc-toolbar .fc-today-button {
			height: 100%;
			padding-left: 16px;
			padding-right: 16px;
			font-size: 14px;
		}

		.fc-toolbar .fc-prev-button .fc-icon:after,
		.fc-toolbar .fc-next-button .fc-icon:after {
			top: 0;
			color: #B1B1B1;
		}
	</style>
}
<div class="row">
	<div class="col calendar-controls">
	</div>
</div>
<div class="row">
	<div class="col-md-3">
		<div class="card">
			<div class="card-body">
				<h4 class="card-title">Drag and Drop Your Event</h4>
				<div class="row">
					<div class="col-md-12 col-sm-12 col-xs-12">
						<div id="calendar-events" class="m-t-20">
							<div class="calendar-events" data-class="bg-info"><i class="fa fa-circle text-info"></i> My Event One</div>
							<div class="calendar-events" data-class="bg-success"><i class="fa fa-circle text-success"></i> My Event Two</div>
							<div class="calendar-events" data-class="bg-danger"><i class="fa fa-circle text-danger"></i> My Event Three</div>
							<div class="calendar-events" data-class="bg-warning"><i class="fa fa-circle text-warning"></i> My Event Four</div>
						</div>
						<!-- checkbox -->
						<div class="checkbox">
							<input id="drop-remove" type="checkbox">
							<label for="drop-remove">
								Remove after drop
							</label>
						</div>
						<a href="javascript:void(0)" data-toggle="modal" data-target="#add-new-event" class="btn btn-lg m-t-40 btn-danger btn-block waves-effect waves-light">
							<i class="ti-plus"></i> Add New Event
						</a>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-md-9 calendar-grid">
		<div class="card">
			<div class="card-block">
				<div id="calendar"></div>
			</div>
		</div>
	</div>
</div>


<!-- BEGIN MODAL -->
<div class="modal none-border" id="my-event">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title"><strong>Add Event</strong></h4>
			</div>
			<div class="modal-body"></div>
			<div class="modal-footer">
				<button type="button" class="btn btn-white waves-effect" data-dismiss="modal">Close</button>
				<button type="button" class="btn btn-success save-event waves-effect waves-light">Create event</button>
				<button type="button" class="btn btn-danger delete-event waves-effect waves-light" data-dismiss="modal">Delete</button>
			</div>
		</div>
	</div>
</div>
<!-- Modal Add Category -->
<div class="modal fade none-border" id="add-new-event">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title"><strong>Add</strong> a category</h4>
			</div>
			<div class="modal-body">
				<form role="form">
					<div class="row">
						<div class="col-md-6">
							<label class="control-label">Category Name</label>
							<input class="form-control form-white" placeholder="Enter name" type="text" name="category-name" />
						</div>
						<div class="col-md-6">
							<label class="control-label">Choose Category Color</label>
							<select class="form-control form-white" data-placeholder="Choose a color..." name="category-color">
								<option value="success">Success</option>
								<option value="danger">Danger</option>
								<option value="info">Info</option>
								<option value="primary">Primary</option>
								<option value="warning">Warning</option>
								<option value="inverse">Inverse</option>
							</select>
						</div>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger waves-effect waves-light save-category" data-dismiss="modal">Save</button>
				<button type="button" class="btn btn-white waves-effect" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<!-- END MODAL -->


@section Scripts
{
	<script src="~/lib/moment.js/moment.js"></script>
	<script src="~/lib/fullcalendar/fullcalendar.js"></script>
	@*<script src="~/calendar/js/internal-calendar-plugin-v1.js"></script>*@
	<script>
		!function ($) {
			"use strict";

			var CalendarApp = function () {
				this.$body = $("body")
				this.$calendar = $('#calendar'),
					this.$event = ('#calendar-events div.calendar-events'),
					this.$categoryForm = $('#add-new-event form'),
					this.$extEvents = $('#calendar-events'),
					this.$modal = $('#my-event'),
					this.$saveCategoryBtn = $('.save-category'),
					this.$calendarObj = null
			};

			/* on drop */
			CalendarApp.prototype.onDrop = function (eventObj, date) {
				var $this = this;
				// retrieve the dropped element's stored Event Object
				var originalEventObject = eventObj.data('eventObject');
				var $categoryClass = eventObj.attr('data-class');
				// we need to copy it, so that multiple events don't have a reference to the same object
				var copiedEventObject = $.extend({}, originalEventObject);
				// assign it the date that was reported
				copiedEventObject.start = date;
				if ($categoryClass)
					copiedEventObject['className'] = [$categoryClass];
				// render the event on the calendar
				$this.$calendar.fullCalendar('renderEvent', copiedEventObject, true);
				// is the "remove after drop" checkbox checked?
				if ($('#drop-remove').is(':checked')) {
					// if so, remove the element from the "Draggable Events" list
					eventObj.remove();
				}
			},
				/* on click on event */
				CalendarApp.prototype.onEventClick = function (calEvent, jsEvent, view) {
					var $this = this;
					var form = $("<form></form>");
					form.append("<label>Change event name</label>");
					form.append("<div class='input-group'><input class='form-control' type=text value='" + calEvent.title + "' /><span class='input-group-btn'><button type='submit' class='btn btn-success waves-effect waves-light'><i class='fa fa-check'></i> Save</button></span></div>");
					$this.$modal.modal({
						backdrop: 'static'
					});
					$this.$modal.find('.delete-event').show().end().find('.save-event').hide().end().find('.modal-body').empty().prepend(form).end().find('.delete-event').unbind('click').click(function () {
						$this.$calendarObj.fullCalendar('removeEvents', function (ev) {
							return (ev._id == calEvent._id);
						});
						$this.$modal.modal('hide');
					});
					$this.$modal.find('form').on('submit', function () {
						calEvent.title = form.find("input[type=text]").val();
						$this.$calendarObj.fullCalendar('updateEvent', calEvent);
						$this.$modal.modal('hide');
						return false;
					});
				},
				/* on select */
				CalendarApp.prototype.onSelect = function (start, end, allDay) {
					var $this = this;
					$this.$modal.modal({
						backdrop: 'static'
					});
					var form = $("<form></form>");
					form.append("<div class='row'></div>");
					form.find(".row")
						.append("<div class='col-md-6'><div class='form-group'><label class='control-label'>Event Name</label><input class='form-control' placeholder='Insert Event Name' type='text' name='title' /></div></div>")
						.append("<div class='col-md-6'><div class='form-group'><label class='control-label'>Category</label><select class='form-control' name='category'></select></div></div>")
						.find("select[name='category']")
						.append("<option value='bg-danger'>Danger</option>")
						.append("<option value='bg-success'>Success</option>")
						.append("<option value='bg-purple'>Purple</option>")
						.append("<option value='bg-primary'>Primary</option>")
						.append("<option value='bg-pink'>Pink</option>")
						.append("<option value='bg-info'>Info</option>")
						.append("<option value='bg-warning'>Warning</option></div></div>");
					$this.$modal.find('.delete-event').hide().end().find('.save-event').show().end().find('.modal-body').empty().prepend(form).end().find('.save-event').unbind('click').click(function () {
						form.submit();
					});
					$this.$modal.find('form').on('submit', function () {
						var title = form.find("input[name='title']").val();
						var beginning = form.find("input[name='beginning']").val();
						var ending = form.find("input[name='ending']").val();
						var categoryClass = form.find("select[name='category'] option:checked").val();
						if (title !== null && title.length != 0) {
							$this.$calendarObj.fullCalendar('renderEvent', {
								title: title,
								start: start,
								end: end,
								allDay: false,
								className: categoryClass
							}, true);
							$this.$modal.modal('hide');
						}
						else {
							alert('You have to give a title to your event');
						}
						return false;

					});
					$this.$calendarObj.fullCalendar('unselect');
				},
				CalendarApp.prototype.enableDrag = function () {
					//init events
					$(this.$event).each(function () {
						// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
						// it doesn't need to have a start or end
						var eventObject = {
							title: $.trim($(this).text()) // use the element's text as the event title
						};
						// store the Event Object in the DOM element so we can get to it later
						$(this).data('eventObject', eventObject);
						// make the event draggable using jQuery UI
						$(this).draggable({
							zIndex: 999,
							revert: true,      // will cause the event to go back to its
							revertDuration: 0  //  original position after the drag
						});
					});
				}
			/* Initializing */
			CalendarApp.prototype.init = function () {
				this.enableDrag();
				/*  Initialize the calendar  */
				var date = new Date();
				var d = date.getDate();
				var m = date.getMonth();
				var y = date.getFullYear();
				var form = '';
				var today = new Date($.now());

				var defaultEvents = [{
					title: 'Released Ample Admin!',
					start: new Date($.now() + 506800000),
					className: 'bg-info'
				}, {
					title: 'This is today check date',
					start: today,
					end: today,
					className: 'bg-danger'
				}, {
					title: 'This is your birthday',
					start: new Date($.now() + 848000000),
					className: 'bg-info'
				}, {
					title: 'your meeting with john',
					start: new Date($.now() - 1099000000),
					end: new Date($.now() - 919000000),
					className: 'bg-warning'
				}, {
					title: 'your meeting with john',
					start: new Date($.now() - 1199000000),
					end: new Date($.now() - 1199000000),
					className: 'bg-purple'
				}, {
					title: 'your meeting with john',
					start: new Date($.now() - 399000000),
					end: new Date($.now() - 219000000),
					className: 'bg-info'
				},
				{
					title: 'Hanns birthday',
					start: new Date($.now() + 868000000),
					className: 'bg-danger'
				}, {
					title: 'Like it?',
					start: new Date($.now() + 348000000),
					className: 'bg-success'
				}];

				var $this = this;
				$this.$calendarObj = $this.$calendar.fullCalendar({
					slotDuration: '00:15:00', /* If we want to split day time each 15minutes */
					minTime: '08:00:00',
					maxTime: '19:00:00',
					defaultView: 'month',
					handleWindowResize: true,

					header: {
						left: 'prev,next today',
						center: 'title',
						right: 'month,agendaWeek,agendaDay'
					},
					events: defaultEvents,
					editable: true,
					droppable: true, // this allows things to be dropped onto the calendar !!!
					eventLimit: true, // allow "more" link when too many events
					selectable: true,
					drop: function (date) { $this.onDrop($(this), date); },
					select: function (start, end, allDay) { $this.onSelect(start, end, allDay); },
					eventClick: function (calEvent, jsEvent, view) { $this.onEventClick(calEvent, jsEvent, view); }

				});

				//on new event
				this.$saveCategoryBtn.on('click', function () {
					var categoryName = $this.$categoryForm.find("input[name='category-name']").val();
					var categoryColor = $this.$categoryForm.find("select[name='category-color']").val();
					if (categoryName !== null && categoryName.length != 0) {
						$this.$extEvents.append('<div class="calendar-events bg-' + categoryColor + '" data-class="bg-' + categoryColor + '" style="position: relative;"><i class="fa fa-move"></i>' + categoryName + '</div>')
						$this.enableDrag();
					}

				});
			},

				//init CalendarApp
				$.CalendarApp = new CalendarApp, $.CalendarApp.Constructor = CalendarApp

		}(window.jQuery),

			//initializing CalendarApp
			function ($) {
				"use strict";
				$.CalendarApp.init();
				$('.calendar-grid').prepend($('.fc-toolbar .fc-center'));
				$('.calendar-controls').prepend($('.fc-toolbar'));
				$('.fc-today-button').insertAfter($('.fc-prev-button'));
			}(window.jQuery);


	</script>
}
