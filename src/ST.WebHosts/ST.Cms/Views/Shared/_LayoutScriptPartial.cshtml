@using Microsoft.AspNetCore.Http
@using ST.Identity.Abstractions
@using ST.Identity.Data.MultiTenants
@using ST.Localization.Razor.ViewModels.LocalizationViewModels
@using ST.MultiTenant.Abstractions

@inject UserManager<ApplicationUser> UserManager
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig
@inject IHttpContextAccessor Accessor
@inject IOrganizationService<Tenant> TenantService
@{
	var user = await UserManager.GetUserAsync(User);
	var id = Accessor.HttpContext.Session.GetString(LocalizationConfig.Value.SessionStoreKeyName);
	var language = LocalizationConfig.Value.Languages.FirstOrDefault(l => l.Identifier == id);
	var organization = TenantService.GetTenantById(user.TenantId.GetValueOrDefault(Guid.Empty));
	//var languages = LocalizationConfig.Value.Languages.Where(x => x.IsDisabled == false);
}

@model Guid

<script>
			window.load = function (uri, data = null, type = "get") {
				try {
					const url = new URL(location.href);
					uri = `${url.origin}${uri}`;

					const req = $.ajax({
						url: uri,
						type: type,
						data: data,
						async: false
					});
					return JSON.parse(req.responseText);
				} catch (exp) {
					console.log(exp);
					return null;
				}
			};
			const notificator = new Notificator();
			st = new ST();
			const controller = "@ViewContext?.RouteData?.Values["controller"]?.ToString()";
			const view = "@ViewContext?.RouteData?.Values["action"]?.ToString()";

			const storageSettings = localStorage.getItem("settings");
			if (storageSettings) {
				var s = JSON.parse(storageSettings);
				s.user = {
					userName: "@user.UserName",
					email: "@user.Email",
					id: "@user.Id",
					organization: "@organization.Name"
				};
				s.navigation = {
					view: view,
					controller: controller,
					current: "@ViewData["Title"]"
				};
				s.layout = {
					id: "@Model"
				};
				s.localization.current = {
					identifier: "@language?.Identifier",
					name: "@language?.Name"
				};

				localStorage.setItem("settings", JSON.stringify(s));
			} else {
				const s = {
					layout: {
						id : "@Model"
					}
				};
				s.navigation = {
					view: view,
					controller: controller,
					current: "@ViewData["Title"]"
				};

				s.user = {
					userName: "@user.UserName",
					email: "@user.Email",
					id: "@user.Id",
					organization: "@organization.Name"
				};

				s.app = {
					name : "27001 Expert"
				};

				s.localization = {
					languages: window.load("/Localization/GetLanguagesAsJson"),
					current: {
						identifier: "@language?.Identifier",
						name: "@language?.Name"
					}
				};
				localStorage.setItem("settings", JSON.stringify(s));
			}
</script>